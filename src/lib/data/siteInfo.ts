import type { InfoItem } from '../Info.svelte';

const colors = {
	vanilla: 'orange',
	solid: 'blue',
	svelte: 'red',
	react: 'blue',
	angular: 'red',
	vue: 'green',
	htmx: 'purple',
	alpine: 'blue',
};

export const items: InfoItem[] = [
	{
		name: 'MMO Combat Simulator',
		url: 'mmo.alexbos.co',
		color: colors.solid,
		started: '11-03-2021',
		status: 'Not Abandoned; Low Priority',
		stack: ['SolidJS'],
		short:
			'A combat simulator for MMOs, with a focus on FFXIV.\nThe goal is to enable simulating builds and combat rotations to optimize DPS, and to provide a platform for theorycrafting',
		completed:
			'The foundation of the combat system: actions, effects, traits, cooldowns, combos, resources, etc. (as well as ~70% of Endwalker-era Dragoon abilities for demo); keybinding; drag/drop from "spellbook"',
		todo: 'Add in items and gear (from existing API), player stats and apply them to damage calculations, skill trees, wide range of automation for better testing builds (generally just a crap load of heuristics), complete Dragoon and maybe one other demo class to ensure system can handle everything, and a LOT of UI/UX improvements',
	},
	{
		name: 'The Wild Sheep Chase',
		url: 'sheep.alexbos.co',
		color: colors.solid,
		started: '12-09-2023',
		status: 'Not Abandoned; Low Priority',
		stack: ['SolidJS'],
		short:
			'A simple, branching narrative game based on the D&D one-shot of the same name.',
		completed:
			'The basic structure of the game, including character select, dialogue system, basic item/inventory system, and the first few scenes',
		todo: 'Maybe overhaul the options system, otherwise just finish the story: add in more items and choices, add in more scenes, add in more characters, add in more endings, add in more everything. If I get really ambitious, I might add in a D&D-style combat system so it\'s actually a game',
	},
	{
		name: 'Wordle Clone',
		url: 'wordle.alexbos.co',
		color: colors.alpine,
		short: 'A clone of the popular word game Wordle (please don\'t sue)',
		started: '02-08-2022',
		status: 'Functionally Complete',
		stack: ['Alpine.js'],
		completed: 'The basic game loop, including guessing words, checking them, and displaying results (albeit in a lazy manner)',
		todo: 'I was considering adding a multiplayer functionality and expanding the available word size, but I think I\'ll just leave it as is',
	},
	{
		name: 'Pokemon Red Clone',
		url: 'poke.alexbos.co',
		color: colors.angular,
		started: '12-25-2021',
		status: 'Abandoned',
		stack: ['Angular'],
		short: 'A web clone of the original Pokemon Red game (please don\'t sue)',
		completed: 'Rudimentary combat system accounting for types, levels, and stats; rudimentary pokedex',
		todo: 'The entire rest of the game. Originally got sidetracked creating a mapmaker tool for the next steps, but then got sidetracked from that too, then learned I\'d rather not use Angular for fun projects anyways',
	},
	{
		name: 'Conway\'s Game of Life',
		url: 'conway.alexbos.co',
		color: colors.vanilla,
		started: '01-01-2022',
		status: 'Complete',
		stack: ['JavaScript'],
		short: 'A simple implementation of Conway\'s Game of Life with visual representation of when a cell is born (green) or dies (red)',
		completed: 'The game of life',
		todo: 'Nothing, it\'s done (click on it)',
	},
	{
		name: 'Conway\'s Game of Life',
		url: 'conway.alexbos.co',
		color: colors.vanilla,
		started: '01-01-2022',
		status: 'Complete',
		stack: ['JavaScript'],
		short: 'A simple implementation of Conway\'s Game of Life with visual representation of when a cell is born (green) or dies (red)',
		completed: 'The game of life',
		todo: 'Nothing, it\'s done (click on it)',
	},
	{
		name: 'Conway\'s Game of Life',
		url: 'conway.alexbos.co',
		color: colors.vanilla,
		started: '01-01-2022',
		status: 'Complete',
		stack: ['JavaScript'],
		short: 'A simple implementation of Conway\'s Game of Life with visual representation of when a cell is born (green) or dies (red)',
		completed: 'The game of life',
		todo: 'Nothing, it\'s done (click on it)',
	},
	{
		name: 'Conway\'s Game of Life',
		url: 'conway.alexbos.co',
		color: colors.vanilla,
		started: '01-01-2022',
		status: 'Complete',
		stack: ['JavaScript'],
		short: 'A simple implementation of Conway\'s Game of Life with visual representation of when a cell is born (green) or dies (red)',
		completed: 'The game of life',
		todo: 'Nothing, it\'s done (click on it)',
	},
	{
		name: 'Conway\'s Game of Life',
		url: 'conway.alexbos.co',
		color: colors.vanilla,
		started: '01-01-2022',
		status: 'Complete',
		stack: ['JavaScript'],
		short: 'A simple implementation of Conway\'s Game of Life with visual representation of when a cell is born (green) or dies (red)',
		completed: 'The game of life',
		todo: 'Nothing, it\'s done (click on it)',
	},
	{
		name: 'Conway\'s Game of Life',
		url: 'conway.alexbos.co',
		color: colors.vanilla,
		started: '01-01-2022',
		status: 'Complete',
		stack: ['JavaScript'],
		short: 'A simple implementation of Conway\'s Game of Life with visual representation of when a cell is born (green) or dies (red)',
		completed: 'The game of life',
		todo: 'Nothing, it\'s done (click on it)',
	},
];
